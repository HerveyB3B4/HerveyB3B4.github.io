{"meta":{"title":"Hervey's Blog","subtitle":"","description":"","author":"Hervey","url":"http://herveyb3b4.github.io","root":"/"},"pages":[{"title":"about","date":"2023-09-22T16:00:00.000Z","updated":"2023-10-30T18:29:20.440Z","comments":true,"path":"about/index.html","permalink":"http://herveyb3b4.github.io/about/index.html","excerpt":"","text":"欢迎大佬们参观我的Blog 本人浙江工业大学软件工程专业本科生在读 一个非常普通的ACMer"},{"title":"tags","date":"2023-10-30T11:36:49.000Z","updated":"2023-10-30T18:29:20.460Z","comments":true,"path":"tags/index.html","permalink":"http://herveyb3b4.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-10-30T11:36:37.000Z","updated":"2023-10-30T18:29:20.450Z","comments":true,"path":"categories/index.html","permalink":"http://herveyb3b4.github.io/categories/index.html","excerpt":"","text":""},{"title":"Links","date":"2023-10-30T23:59:14.000Z","updated":"2023-10-31T00:00:49.180Z","comments":true,"path":"links/index.html","permalink":"http://herveyb3b4.github.io/links/index.html","excerpt":"","text":""}],"posts":[{"title":"杂项做题笔记","slug":"Notes-on-Misc","date":"2023-12-05T11:33:44.000Z","updated":"2024-01-31T02:53:27.842Z","comments":true,"path":"2023/12/05/Notes-on-Misc/","link":"","permalink":"http://herveyb3b4.github.io/2023/12/05/Notes-on-Misc/","excerpt":"","text":"1 CTF工具使用1.1 stegsolve 打开Stegsolve图片隐写解析器 1$ java -jar Stegsolve.jar 2 练习记录Misc-金三胖 在File &gt;&gt; Open中打开gif文件 使用Analyse &gt;&gt; Frame逐帧查看 在第21,51,79帧寻找到flag片段，将其组合在一起获得flag&#123;he11ohongke&#125; Misc-LSB 在File &gt;&gt; Open中打开png文件 发现在Red plane 0, Green plane 0, Blue plane 0的模式下图片上方有一段色块异常 使用Analyse &gt;&gt; Data Extract选中Red 0, Green 0, Blue 0, LSB First并Save Bin保存为图片 打开该图片得到一个二维码, 使用QR Research扫描获得: flag&#123;1sb_i4_s0_Ea4y&#125; Misc-镜子里面的世界 在File &gt;&gt; Open中打开png文件 发现在Red plane 0, Green plane 0, Blue plane 0的模式下图片全黑 使用Analyse &gt;&gt; Data Extract选中Red 0, Green 0, Blue 0，得到如下文本 123456784865792049207468 696e6b2077652063 Hey I th ink we c616e207772697465 20736166656c7920 an write safely 696e207468697320 66696c6520776974 in this file wit686f757420616e79 6f6e652073656569 hout any one seei6e672069742e2041 6e797761792c2074 ng it. A nyway, t6865207365637265 74206b6579206973 he secre t key is3a2073743367305f 7361757275735f77 : st3g0_ saurus_w7233636b73000000 0000000000000000 r3cks... ........ 获得flag&#123;st3g0_saurus_wr3cks&#125; Misc-二维码 下载文件并解压获得QR_code.png 看起来是个二维码？用QR Research扫描一下看: 好吧什么都没有… 再用stegsolve试试？ 一无所获… 或许这并不全是png文件?用binwalk命令分析一下 12345678┌──(hervey㉿ZHW)-[~/Downloads/Misc/二维码]└─$ binwalk QR_code.pngDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 PNG image, 280 x 280, 1-bit colormap, non-interlaced471 0x1D7 Zip archive data, encrypted at least v2.0 to extract, compressed size: 29, uncompressed size: 15, name: 4number.txt650 0x28A End of Zip archive, footer length: 22 发现里面还藏了个zip文件，使用foremost分离隐藏文件 1234567┌──(hervey㉿ZHW)-[~/Downloads/Misc/二维码]└─$ foremost ./QR_code.png Processing: ./QR_code.png�foundat=4number.txtnQjxu�J����[����OPF4L�*| 进入output文件夹中 1234┌──(hervey㉿ZHW)-[~/Downloads/Misc/二维码/output]└─$ lsaudit.txt png zip 在zip文件夹里有一个00000000.zip文件，但是需要密码，由4number.txt的提示我们可以猜测密码由四位数字组成，尝试使用fcrackzip暴力破解: 12345┌──(hervey㉿ZHW)-[~/Downloads/Misc/二维码/output/zip]└─$ fcrackzip -b -c1 -l 1-4 -u 00000000.zip PASSWORD FOUND!!!!: pw == 7639 得到密码为7639，解压文件00000000.zip 12345678910111213┌──(hervey㉿ZHW)-[~/Downloads/Misc/二维码/output/zip]└─$ unzip 00000000.zip Archive: 00000000.zip[00000000.zip] 4number.txt password: inflating: 4number.txt ┌──(hervey㉿ZHW)-[~/Downloads/Misc/二维码/output/zip]└─$ ls 00000000.zip 4number.txt┌──(hervey㉿ZHW)-[~/Downloads/Misc/二维码/output/zip]└─$ cat ./4number.txt CTF&#123;vjpw_wnoei&#125; 成功获得flag&#123;vjpw_wnoei&#125; Misc-大白 打开图片，发现无法正常打开(Kali系统下)，用binwalk命令查看图片文件 1234567┌──(hervey㉿ZHW)-[~/Downloads/Misc/dabai]└─$ binwalk ./dabai.pngDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 PNG image, 679 x 256, 8-bit/color RGBA, non-interlaced91 0x5B Zlib compressed data, compressed 发现还有一段数据未使用，可能是PNG文件头中宽高设置不正确 PNG文件结构(PNG File Format - Raster Image File )00 - 03 : Header 89 50 4E 4708 - 0B : Length0C - 0F : Chunk Type Code10 - 13 : Width14 - 17 : Height1D - 20 : CRC 使用如下Python脚本获取图片真实大小 123456789101112131415161718import osimport binasciiimport struct#文件名filename = &quot;dabai.png&quot;#图片当前CRC(29-32位)CRC = 0x6d7c7135crcbp = open(filename, &quot;rb&quot;).read()for i in range(2000): for j in range(2000): data = crcbp[12:16] + \\ struct.pack(&#x27;&gt;i&#x27;, i) + struct.pack(&#x27;&gt;i&#x27;, j) + crcbp[24:29] crc32 = binascii.crc32(data) &amp; 0xffffffff if (crc32 == CRC): print(i, j) print(&#x27;hex:&#x27;, hex(i), hex(j)) 1234┌──(hervey㉿ZHW)-[~/Tools/Misc]└─$ python calc_pic_size.py 679 479hex: 0x2a7 0x1df 打开十六进制编辑器, 将10 - 17位设置为正确值: 再次打开图片，即可获得flag&#123;He1l0_d4_ba1&#125; Misc-你竟然赶我走 解压后发现一张图片，先用Stegsolve试试，尝试了一圈发现在某些模式下右下角有些变化，推测可能在文件尾有问题 使用010 Editor打开文件，一直拉到最底下，获得flag&#123;stego_is_s0_bor1ing&#125; Misc-zip伪加密 下载文件，先解压 ? 怎么加密了 先binwalk看看文件结构，看看有没有藏些什么提示 1234567┌──(hervey㉿ZHW)-[~/Downloads/Misc/zip伪加密]└─$ binwalk ./ee2f7f26-5173-4e7a-8ea4-e4945e6f04ff.zip DECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 Zip archive data, encrypted at least v2.0 to extract, compressed size: 25, uncompressed size: 23, name: flag.txt153 0x99 End of Zip archive, footer length: 22 好吧并没有… 考虑到标题是zip伪加密，查了查zip的文件结构 Offset Bytes Description 0 4 Local file header signature # 0x04034b50 (read as a little-endian number) 4 2 Version needed to extract (minimum) 6 2 General purpose bit flag 8 2 Compression method 10 2 File last modification time 12 2 File last modification date 14 4 CRC-32 18 4 Compressed size 22 4 Uncompressed size 26 2 File name length (n) 28 2 Extra field length (m) 30 n File Name 30+n m Extra Field 其中General purpose bit flag为00 00时为未设置加密 故修改 06 和 47 位的09为00即可无密码进行解压获得flag.txt 进而获得flag&#123;Adm1N-B2G-kU-SZIP&#125; Misc-[BJDCTF2020]鸡你太美 使用十六进制编辑器打开两个文件，对比发现篮球副本.gif文件头缺少GIF8(47 49 46 38)字样，添加后就能正常打开了，进而获得flag&#123;zhi_yin_you_are_beautiful&#125; Misc-N种方法解决 下载获得KEY.exe文件，点击无法运行 使用Visual Studio Code打开，发现如下字样 1data:image/jpg;base64,... 猜测是一个图片文件，后面的...为base64加密后的文件内容 使用在线解密网站 解密后保存为png文件，得到一个二维码 扫描获得KEY&#123;dca57f966e4e4e31fd5b15417da63269&#125; Misc-另外一个世界 解压后又是一个图片，用Stegsolve和binwalk都没看出什么异常 尝试用十六进制编辑器打开，在最底部发现一段不太寻常的01串 101101011 01101111 01100101 01101011 01101010 00110011 01110011 每8位转化为10进制($2^8-1&#x3D;255$)并对应到ASCII码获得字符串 二进制 十进制 ASCII 01101011 107 k 01101111 111 o 01100101 101 e 01101011 107 k 01101010 106 j 00110011 51 3 01110011 115 s 获得flag&#123;koekj3s&#125; Misc-wireshark 使用wireshark打开流量包 Ctrl + F打开过滤器，据题目提示，查找POST请求 运气很好，第一个POST请求就能获得flag&#123;ffb7567a1d4f4abdffdb54e022f8facd&#125; Misc-数据包中的线索 直接查询HTTP 找到这条 右键 &gt;&gt; Follow &gt;&gt; HTTP Stream，将内容复制下来通过base64解码得到一张图片 获得flag&#123;209acebf6324a09671abc31c869de72c&#125; Misc-文件中的秘密 Windows下右键 &gt;&gt; 属性(Alt + Ctrl) &gt;&gt; 详细信息 &gt;&gt; 备注 获取 flag&#123;870c5a72806115cb5439345d8b014396&#125; 也可以用十六进制编辑器查找到相应片段 Misc-FLAG 打开Stegsolve，使用Analyse &gt;&gt; Data Extract选中Red 0, Green 0, Blue 0, LSB First并Save Bin保存为zip文件并解压 执行1文件，可以找到hctf&#123;dd0gf4c3tok3yb0ard4g41n~~~&#125;字样 123456┌──(hervey㉿ZHW)-[~/Downloads/Misc/FLAG]└─$ chmod +x 1┌──(hervey㉿ZHW)-[~/Downloads/Misc/FLAG]└─$ ./1hctf&#123;dd0gf4c3tok3yb0ard4g41n~~~&#125; 或者用strings命令扫描文件 123┌──(hervey㉿ZHW)-[~/Downloads/FLAG]└─$ strings 1 | grep hctfhctf&#123;dd0gf4c3tok3yb0ard4g41n~~~&#125; 或者用ghidra反编译二进制文件，找到main函数查看代码，发现 12345void main(void)&#123; printf(&quot;hctf&#123;dd0gf4c3tok3yb0ard4g41n~~~&#125;&quot;); return;&#125; 都能获取hctf&#123;dd0gf4c3tok3yb0ard4g41n~~~&#125; Misc-后门查杀 将解压后的文件夹扔进D盾扫描 点击已知后门，右键 &gt;&gt; 查看文件，找到如下字段，其中变量pass的内容为md5。 依照提示进而获得flag&#123;6ac45fb83b3bc355c024f5034b947dd3&#125; Misc-来首歌吧 使用Audacity打开解压后的音频文件stego100 放大音轨后感觉好像是摩斯电码？先把它抄下来 1..... -... -.-. ----. ..--- ..... -.... ....- ----. -.-. -... ----- .---- ---.. ---.. ..-. ..... ..--- . -... .---- --... -.. --... ----- ----. ..--- ----. .---- ----. .---- -.-. 放到解密器里解密，获得flag&#123;5BC925649CB0188F52E617D70929191C&#125; Misc-乌镇峰会种图 思路同Misc-你竟然赶我走 flag&#123;97314e7864a8f62627b26f3f998c37f1&#125; Misc-基础破解 根据题目提示，我们使用rarcrack命令暴力破解下载获得的文件 首先设置&lt;filename&gt;.xml配置文件 123456&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;rarcrack&gt; &lt;abc&gt;0123456789&lt;/abc&gt; &lt;current&gt;0000&lt;/current&gt; &lt;good_password/&gt;&lt;/rarcrack&gt; 再使用命令破解 123456789┌──(hervey㉿ZHW)-[~/Downloads/Misc/基础破解]└─$ rarcrack »ù´¡ÆÆ½â.rar --threads 20 --type rarRarCrack! 0.2 by David Zoltan Kedves (kedazo@gmail.com)INFO: number of threads adjusted to 12INFO: the specified archive type: rarINFO: cracking »ù´¡ÆÆ½â.rar, status file: »ù´¡ÆÆ½â.rar.xmlINFO: Resuming cracking from password: &#x27;0000&#x27;GOOD: password cracked: &#x27;2563&#x27; 解压获得flag.txt 1ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30= 尝试提交flag，发现错误 再次观察这段消息，或许是加密后的结果？ 使用在线解密网站 解密，获取flag&#123;70354300a5100ba78068805661b93a5c&#125; Misc-假如给我三天光明 解压文件，得到一个压缩文件music.zip和一张图片pic.jpg 打开图片，发现下面有一排 $2 \\times 3$ 点阵图，猜测是盲文 查询盲文表并解密，得到kmdonowg 尝试以此为密码解压文件，发现解压不成功 通过binwalk指令扫描文件，提示这是一个rar文件 123456┌──(hervey㉿ZHW)-[~/Downloads/Misc/假如给我三天光明]└─$ binwalk music.zip DECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 RAR archive data, version 4.x, first volume type: MAIN_HEAD 将文件名改为music.rar，以kmdonowg为密码尝试再次解压 得到一个音频文件，使用Audacity打开文件，获得一段摩斯电码 1-.-. - ..-. .-- .--. . .. ----- ---.. --... ...-- ..--- ..--.. ..--- ...-- -.. --.. 通过摩斯电码转换器获得 1CTFWPEI08732?23DZ 进而获得flag&#123;wepi08732?23dz&#125; Misc-rar 根据题目提示，我们使用rarcrack命令暴力破解下载获得的文件 首先设置&lt;filename&gt;.xml配置文件 123456&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;rarcrack&gt; &lt;abc&gt;0123456789&lt;/abc&gt; &lt;current&gt;0000&lt;/current&gt; &lt;good_password/&gt;&lt;/rarcrack&gt; 再使用命令破解 1234567891011121314┌──(hervey㉿ZHW)-[~/Downloads/Misc/rar]└─$ rarcrack dianli_jbctf_MISC_T10076_20150707_rar.rar --threads 20 --type rarRarCrack! 0.2 by David Zoltan Kedves (kedazo@gmail.com)INFO: number of threads adjusted to 12INFO: the specified archive type: rarINFO: cracking dianli_jbctf_MISC_T10076_20150707_rar.rar, status file: dianli_jbctf_MISC_T10076_20150707_rar.rar.xmlINFO: Resuming cracking from password: &#x27;0000&#x27;Probing: &#x27;1488&#x27; [492 pwds/sec]Probing: &#x27;3120&#x27; [544 pwds/sec]Probing: &#x27;4724&#x27; [534 pwds/sec]Probing: &#x27;6313&#x27; [529 pwds/sec]Probing: &#x27;7947&#x27; [544 pwds/sec]GOOD: password cracked: &#x27;8795&#x27; 解压获得flag.txt 1flag&#123;1773c5da790bd3caff38e3decd180eb7&#125;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://herveyb3b4.github.io/categories/CTF/"}],"tags":[{"name":"WP","slug":"WP","permalink":"http://herveyb3b4.github.io/tags/WP/"}]},{"title":"安装Kali WSL","slug":"How-to-install-Kali-WSL","date":"2023-11-30T15:00:50.000Z","updated":"2024-01-31T02:39:52.331Z","comments":true,"path":"2023/11/30/How-to-install-Kali-WSL/","link":"","permalink":"http://herveyb3b4.github.io/2023/11/30/How-to-install-Kali-WSL/","excerpt":"","text":"引言Kali WSL（Windows Subsystem for Linux）是在 Windows 环境下运行 Kali Linux 的一种方式，同时，WSL相比于Linux虚拟机能和Windows较好的进行文件系统的互通，非常适合用于学习。 步骤1. 开启 WSL 功能确保系统为 Windows 10 专业版，然后按照以下步骤开启 WSL 功能： 打开控制面板 进入程序 -&gt; 启用或关闭 Windows 功能 勾选”适用于 Linux 的 Windows 子系统” 系统更新并重启生效 2. 安装 Kali WSL在 Windows 应用商店中搜索并下载适用于 Linux 的 Windows 子系统，选择 Kali 作为 Linux 发行版进行安装。 3. 升级到 WSL2由于版本问题，确保升级到 WSL2，执行以下命令： 1dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart wsl --set-version kali-linux 2 4. 安装完整版 Kali安装完成后，打开 Kali Linux ，根据设置用户名及密码。 重新启动 Kali Linux ，这时我们发现我们的 Kali Linux 还有很多工具没用安装。 执行以下命令安装 Kali 的完整版： 12sudo apt updatesudo apt install -y kali-linux-large 6. 配置图形化桌面并连接（可选）如果想要体验图形化界面，可以选择安装 Win-KeX 1sudo apt install -y kali-win-kex 打开 Window Mode (窗口模式) 1kex --win 如果你想要体验 Seamless Mode (无缝模式)，还需要额外安装 X410 安装完成后打开并勾选ACCESS CONTROL下的WSL2选项。 打开 Seamless Mode (窗口模式) 1kex --sl 详细教程:Protecting X410 Public Access for WSL2 via Windows Defender Firewall - X410.dev 7. 额外配置（可选）根据需求，可以配置 Windows Terminal，将 Kali 和 Win-KeX 整合进 Terminal。 以下是我的配置文件(仅留下 Kali WSL 相关配置) 1234567891011121314151617181920212223242526272829303132&#123; &quot;profiles&quot;: &#123; &quot;list&quot;: [ &#123; &quot;guid&quot;: &quot;&#123;46ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;, &quot;hidden&quot;: false, &quot;name&quot;: &quot;Kali Linux&quot;, &quot;icon&quot;: &quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;, &quot;source&quot;: &quot;Windows.Terminal.Wsl&quot;, &quot;startingDirectory&quot; : &quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot; &#125;, &#123; // &quot;guid&quot;: &quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;, &quot;hidden&quot;: false, &quot;icon&quot;: &quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;, &quot;name&quot;: &quot;Win-KeX Window Mode&quot;, &quot;commandline&quot;: &quot;wsl -d kali-linux kex --wtstart -s&quot;, &quot;startingDirectory&quot; : &quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot; &#125;, &#123; // &quot;guid&quot;: &quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;, &quot;hidden&quot;: false, &quot;icon&quot;: &quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;, &quot;name&quot;: &quot;Win-KeX Seamless Mode&quot;, &quot;commandline&quot;: &quot;wsl -d kali-linux kex --sl --wtstart -s&quot;, &quot;startingDirectory&quot; : &quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot; &#125;, ] &#125;&#125;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://herveyb3b4.github.io/categories/CTF/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://herveyb3b4.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"Go语言获得Cravatar头像服务网址","slug":"Go-use-cravatar","date":"2023-09-29T16:04:40.000Z","updated":"2023-10-30T18:28:36.130Z","comments":true,"path":"2023/09/30/Go-use-cravatar/","link":"","permalink":"http://herveyb3b4.github.io/2023/09/30/Go-use-cravatar/","excerpt":"","text":"Cravatar真是个好东西 这是Cravatar图像请求的Go语言实现，具体的加密方式请查阅这里 123456789101112131415161718192021package mainimport ( &quot;crypto/md5&quot; &quot;fmt&quot; &quot;strings&quot;)// Hash值获取方式 先删除前导和尾随的空格，再将所有字符置为小写，最后进行MD5加密func Hash(email string) [16]byte &#123; return md5.Sum([]byte(strings.ToLower(strings.TrimFunc(email, func(r rune) bool &#123; return r == &#x27; &#x27; &#125;))))&#125;// 头像获取地址为 https://cravatar.cn/avatar/&#123;HASH&#125;func EmailToCravatarURL(email string) string &#123; return fmt.Sprintf(&quot;https://cravatar.cn/avatar/%x&quot;, Hash(email))&#125;// 试试效果！func main() &#123; fmt.Print(EmailToCravatarURL(&#123;Your email here&#125;))&#125;","categories":[{"name":"后端","slug":"后端","permalink":"http://herveyb3b4.github.io/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"Go","slug":"Go","permalink":"http://herveyb3b4.github.io/tags/Go/"},{"name":"头像服务","slug":"头像服务","permalink":"http://herveyb3b4.github.io/tags/%E5%A4%B4%E5%83%8F%E6%9C%8D%E5%8A%A1/"}]},{"title":"如何使用Navicat连接WSL里的MySQL服务","slug":"How-to-use-Navicat-to-connect-to-MySQL-services-in-WSL","date":"2023-08-02T15:06:50.000Z","updated":"2023-10-30T18:28:36.140Z","comments":true,"path":"2023/08/02/How-to-use-Navicat-to-connect-to-MySQL-services-in-WSL/","link":"","permalink":"http://herveyb3b4.github.io/2023/08/02/How-to-use-Navicat-to-connect-to-MySQL-services-in-WSL/","excerpt":"","text":"0 前言真的有人会干这么套娃的事情吗？ 原来是我啊，那没事了 究其原因，还是由于之前技术不精，在Windows系统上安装MySQL，结果MySQL炸了，而且还没办法卸载干净，这次想着既然VSCode可以与WSL连接，为何Navicat不能与WSL里的MySQL连接呢？ 而且照XCloudFance 学长的说法：“你可以把WSL想象是里面的一台电脑，你的Windows也是一台独立的电脑”，那么navicat理论上应该可以与WSL中的MySQL连接。 于是，痛苦的两个小时配置之旅就开始了(中途还重装了一次WSL qwq) 1 前期准备1.1 安装Navicat自行Baidu&#x2F;Google&#x2F;Bing下载安装包 安装包打开后一路next即可 1.2 安装WSLBaidu&#x2F;Google&#x2F;Bing **注意:**记得将WSL版本设置为WSL2，本人使用的系统是Ubuntu22.04 1.3 在WSL中安装MySQL在WSL终端中输入 1sudo apt install mysql-server 即可，root及其余账户密码配置请自行百度 2 正式开始吧！2.1 找到WSL的IP地址首先，我们应该让Windows主机能够访问WSL，那么我们就应该先知道WSL的本地IP访问地址。 在Windows下打开终端(Power Shell)，使用如下命令查询： 1ipconfig 可以看到这样一行提示： 1234567以太网适配器 vEthernet (WSL): 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::85d4:3cdb:df1f:f6e1%42 IPv4 地址 . . . . . . . . . . . . : 172.30.224.1 子网掩码 . . . . . . . . . . . . : 255.255.240.0 默认网关. . . . . . . . . . . . . : 说明主机其实是能够访问到WSL的。 在WSL的终端中，使用ifconfig查询本地IP地址 1ifconfig 有可能需要使用如下指令安装net-tools： 1sudo apt install net-tools 安装成功后，运行ifconfig会输出类似下面的结果： 1234567891011121314151617eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 172.30.224.99 netmask 255.255.240.0 broadcast 172.30.239.255 inet6 fe80::215:5dff:fe99:f76a prefixlen 64 scopeid 0x20&lt;link&gt; ether 00:15:5d:99:f7:6a txqueuelen 1000 (Ethernet) RX packets 104254 bytes 266388818 (266.3 MB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 69925 bytes 5218621 (5.2 MB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536 inet 127.0.0.1 netmask 255.0.0.0 inet6 ::1 prefixlen 128 scopeid 0x10&lt;host&gt; loop txqueuelen 1000 (Local Loopback) RX packets 5644 bytes 29799099 (29.7 MB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 5644 bytes 29799099 (29.7 MB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 第二行的172.30.224.99便是你的WSL的本地IP地址。 2.2 设置MySQL被局域网访问这时我们可以试着用Navicat连接一下刚才获得IP地址的WSL的MySQL服务，发现Navicat显示连接失败，这是因为我们未设置MySQL能被局域网访问。 进入MySQL中，修改账户的访问权限： 123456mysql -u root -p &lt;password&gt;mysql-&gt;use mysqlmysql-&gt;update user set host = &#x27;%&#x27; where user =&#x27;root&#x27;;mysql-&gt;grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; with grant option;mysql-&gt;flush privileges;mysql-&gt;exit; 找到MySQL的配置文件进行修改: 1sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 在mysqld.cnf中，找到这样一行配置： 1bind-address = 127.0.0.1 修改为： 1bind-address = 0.0.0.0 保存后重启MySQL： 1sudo /etc/init.d/mysql restart 可以通过netstat -aptn检查MySQL的状态 12345(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)Active Internet connections (servers and established)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program nametcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - 2.3 设置Ubuntu防火墙此时我们还是无法连接，还需关闭Ubuntu的防火墙 1sudo ufw enable #开启 在WSL环境下，可能会得到如下提示： 123456789101112131415161718192021222324Traceback (most recent call last): File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 427, in under_ssh ppid = get_ppid(pid) File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 421, in get_ppid return int(ppid)ValueError: invalid literal for int() with base 10: &#x27;S&#x27;During handling of the above exception, another exception occurred:Traceback (most recent call last): File &quot;/usr/sbin/ufw&quot;, line 138, in &lt;module&gt; not ui.continue_under_ssh(): File &quot;/usr/lib/python3/dist-packages/ufw/frontend.py&quot;, line 901, in continue_under_ssh if self.backend.do_checks and ufw.util.under_ssh(): # pragma: no cover File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 457, in under_ssh return under_ssh(ppid) File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 457, in under_ssh return under_ssh(ppid) File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 457, in under_ssh return under_ssh(ppid) [Previous line repeated 1 more time] File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 434, in under_ssh raise ValueError(err_msg)ValueError: Couldn&#x27;t find parent pid for &#x27;3129&#x27; 这是因为/usr/lib/python3/dist-packages/ufw/util.py中有一行Python出现错误 更正方法是进入中： 1sudo vim /usr/lib/python3/dist-packages/ufw/util.py 将 1ppid = open(name).readlines()[0].split(&#x27;)&#x27;)[1].split()[1] 改为 1ppid = open(name).readlines()[0].rsplit(&#x27;)&#x27;,1)[1].split()[1] 即可 之后添加允许访问的端口3306并重载生效即可 12sudo ufw allow 3306sudo ufw reload 完成后查看 1sudo ufw status 得到如下结果即为成功 123456Status: activeTo Action From-- ------ ----3306 ALLOW Anywhere3306 (v6) ALLOW Anywhere (v6) 这时再使用Navicat访问，即可连接上WSL的MySQL服务。","categories":[{"name":"环境配置","slug":"环境配置","permalink":"http://herveyb3b4.github.io/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://herveyb3b4.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"博客搭建教程","slug":"Build-Your-Blog","date":"2020-08-13T04:57:01.000Z","updated":"2023-10-31T01:01:18.990Z","comments":true,"path":"2020/08/13/Build-Your-Blog/","link":"","permalink":"http://herveyb3b4.github.io/2020/08/13/Build-Your-Blog/","excerpt":"","text":"0 前言建这个博客踩了好多坑QWQ 1 安装1.1 安装Git和Node.js这没什么好说的吧… 安装完成后打开cmd通过以下两行命令检测是否安装成功 12git --versionnpm --version 1.2 更换国内镜像源如果您觉得网速够快可以选择跳过此步 1npm config set registry https://registry.npm.taobao.org 1.3 安装Hexo上一步不做的话这一步会慢得让你怀疑人生 1npm install -g hexo-cli 2 创建2.1 创建本地Blog新建一个空文件夹并进入 右键 -&gt; “Git Bash Here” 输入以下命令 1hexo init 2.2 进行本地预览继续在命令行中输入下列代码 12hexo ghexo s 之后进入打开浏览器http://localhost:4000 就可以查看自己的Blog了 3 美化3.1 下载主题在GitHub 中查找hexo-theme 选择一个自己喜欢的主题并clone或下载zip包解压到主目录&#x2F;themes中 3.1.1 yilia这里以yilia 为例 1git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 3.1.2 Material 注意:使用Material主题最好用1.5.2版，最新版会一直报错 这里以Material 为例 12cd themesgit clone https://github.com/viosey/hexo-theme-material.git material 3.1.3 Fluid 以下引用自Fluid官方文档 Hexo 5.0.0 版本以上，推荐通过 npm 直接安装 1npm install --save hexo-theme-fluid 3.2 使用主题3.2.1 yilia修改主目录下的 _config.yml 文件的 theme值为yilia。 1theme: yilia 复制 themes&#x2F;yilia 目录下_config.template.yml 为 _config.yml 3.2.2 Material修改主目录下的 _config.yml 文件的 theme值为material。 1theme: material 复制 themes&#x2F;material 目录下_config.template.yml 为 _config.yml 3.2.3 Fluid修改主目录下的 _config.yml 文件的 theme值为fluid。 1theme: fluid 然后在博客目录下创建 _config.fluid.yml，将主题的 _config.yml 内容复制进去。 3.3 更改语言修改主目录下的 _config.yml 文件的 language值为zh-CN。 1language: zh-CN 3.4 站内搜索3.4.1 yilia &#x2F; Material安装 hexo-generator-search 插件。 1npm install hexo-generator-searchdb --save 修改theme&#x2F;主题名 目录 _config.yml 中的 search值 123search: use: local swiftype_key: 然后在主目录的_config.yml文件中添加 123search: path: search.xml field: all 3.4.2 Fluid修改主目录的 _config.fluid.yml 中的 search值 123456789101112131415161718192021# 搜索功能，基于 hexo-generator-search 插件，若已安装其他搜索插件请关闭此功能，以避免生成多余的索引文件# Search feature, based on hexo-generator-search. If you have installed other search plugins, please disable this feature to avoid generating redundant index filessearch: enable: true # 搜索索引文件的路径，可以是相对路径或外站的绝对路径 # Path for search index file, it can be a relative path or an absolute path path: /local-search.xml # 文件生成在本地的位置，必须是相对路径 # The location where the index file is generated locally, it must be a relative location generate_path: /local-search.xml # 搜索的范围 # Search field # Options: post | page | all field: post # 搜索是否扫描正文 # If true, search will scan the post content content: true 4 部署到前一步本地的博客基本上就建好了，接下来就是将其部署在服务器上 4.1 连接Git仓库首先在GitHub 注册一个账号,建立用户名.github.io的项目 接着打开Git Bash，输入下列命令 12git config --global user.name &quot;用户名&quot;git config --global user.email &quot;注册邮箱&quot; 4.2 添加密钥在Git Bash中继续输入下列命令生成SSH密钥 1ssh-keygen -t rsa -C &quot;注册邮箱&quot; 查看密钥 1cat ~/.ssh/id_rsa.pub 将输出的内容复制到SSH and GPG keys 里 4.3 提交部署安装hexo-deployer-git 1npm install hexo-deployer-git --save 配置主目录的_config.yml文件 1234deploy: type: git repo: 仓库地址 branch: master 部署到GitHub 1hexo d 访问https:&#x2F;&#x2F;用户名.github.io&#x2F;","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://herveyb3b4.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://herveyb3b4.github.io/tags/%E9%9A%8F%E7%AC%94/"}]}],"categories":[{"name":"CTF","slug":"CTF","permalink":"http://herveyb3b4.github.io/categories/CTF/"},{"name":"后端","slug":"后端","permalink":"http://herveyb3b4.github.io/categories/%E5%90%8E%E7%AB%AF/"},{"name":"环境配置","slug":"环境配置","permalink":"http://herveyb3b4.github.io/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://herveyb3b4.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"WP","slug":"WP","permalink":"http://herveyb3b4.github.io/tags/WP/"},{"name":"随笔","slug":"随笔","permalink":"http://herveyb3b4.github.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"Go","slug":"Go","permalink":"http://herveyb3b4.github.io/tags/Go/"},{"name":"头像服务","slug":"头像服务","permalink":"http://herveyb3b4.github.io/tags/%E5%A4%B4%E5%83%8F%E6%9C%8D%E5%8A%A1/"}]}