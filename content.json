{"meta":{"title":"Hervey's Blog","subtitle":"","description":"","author":"Hervey","url":"http://herveyb3b4.github.io","root":"/"},"pages":[{"title":"about","date":"2023-09-22T16:00:00.000Z","updated":"2025-03-01T14:47:58.093Z","comments":true,"path":"about/index.html","permalink":"http://herveyb3b4.github.io/about/index.html","excerpt":"","text":"欢迎大佬们参观我的Blog 本人浙江工业大学软件工程专业本科生在读"},{"title":"Links","date":"2023-10-30T23:59:14.000Z","updated":"2023-10-31T00:00:49.180Z","comments":true,"path":"links/index.html","permalink":"http://herveyb3b4.github.io/links/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-10-30T11:36:49.000Z","updated":"2023-10-30T18:29:20.460Z","comments":true,"path":"tags/index.html","permalink":"http://herveyb3b4.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-10-30T11:36:37.000Z","updated":"2023-10-30T18:29:20.450Z","comments":true,"path":"categories/index.html","permalink":"http://herveyb3b4.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"《30天自制操作系统》学习笔记 day0 - 开个新坑","slug":"OSASK-day0","date":"2025-03-01T14:52:36.000Z","updated":"2025-03-01T15:58:46.961Z","comments":true,"path":"2025/03/01/OSASK-day0/","link":"","permalink":"http://herveyb3b4.github.io/2025/03/01/OSASK-day0/","excerpt":"false","text":"我回来啦！鸽子回笼了 发现上一次更新还是在去年的 4 月份，这个博客也是荒废了好一段时间了。 去年确实有些忙，尤其是上学期的课表，几乎完全无法挤出时间做一些自己的事情，不过偶然之间看到 基本不动的 书架上有一本借来的 《 30 天自制操作系统》。 正好这学期有一门操作系统课，也借着这次机会完成一下小学时立下的一个小目标：读完这本七百多页的“板砖”（在当时来说这本书确实是这样遥不可及的）。 不过这本书已经是十多年前的读物了，很多编程环境已经不再适用于现在的系统环境了，估计会踩很多的坑，至于能不能走到最后，请拭目以待。 最后，就祝我自己能够成功吧！ :-)","categories":[{"name":"随笔","slug":"随笔","permalink":"http://herveyb3b4.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"30天自制操作系统","slug":"30天自制操作系统","permalink":"http://herveyb3b4.github.io/tags/30%E5%A4%A9%E8%87%AA%E5%88%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}]},{"title":"0329 CTF通识课测试1 WriteUp","slug":"Test-0329-WriteUp","date":"2024-04-07T08:54:32.000Z","updated":"2025-03-01T15:24:51.833Z","comments":true,"path":"2024/04/07/Test-0329-WriteUp/","link":"","permalink":"http://herveyb3b4.github.io/2024/04/07/Test-0329-WriteUp/","excerpt":"false","text":"1-tailhint其实就在题目里… 用 010Editor 打开图片，flag 就在文件尾 2-goose考点: Exif 隐写 右键 &gt;&gt; 属性 &gt;&gt; 详细信息 可以看到 flag 在 来源 &gt; 作者 栏 3-lsb考点: lsb 隐写 使用工具: StegSolve.jar 1java -jar Stegsolve.jar 使用StegSolve打开 1_lsb.png 文件， Analyse &gt; Data Extract ，勾选 Red 0 , Green 0 , Blue 0 , LSB First 点击 Preview 获得 flag 4-polar-light考点: png 长宽爆破 使用 010Editor 获得 png 文件的 CRC 校验码 使用如下脚本爆破 png 文件的真实长宽 123456789101112131415161718import osimport binasciiimport struct#文件名filename = &quot;4.png&quot;#图片当前CRC(29-32位)CRC = 0x2EE0E28Ecrcbp = open(filename, &quot;rb&quot;).read()for i in range(2000): for j in range(2000): data = crcbp[12:16] + \\ struct.pack(&#x27;&gt;i&#x27;, i)+struct.pack(&#x27;&gt;i&#x27;, j)+crcbp[24:29] crc32 = binascii.crc32(data) &amp; 0xffffffff if (crc32 == CRC): print(i, j) print(&#x27;hex:&#x27;, hex(i), hex(j)) 得到png的真实尺寸 1234┌──(hervey㉿Hervey)-[/mnt/c/Users/hervey/Downloads]└─$ python3 ./calc_pic_size.py952 490hex: 0x3b8 0x1ea 替换掉原来的长宽值后打开图片即可获得 flag 5-spring使用 010Editor 打开文件，观察后发现文件倒置了 使用如下脚本还原 png 文件 123with open(&#x27;5.png&#x27;, &#x27;rb&#x27;) as f: with open(&#x27;real.png&#x27;, &#x27;wb&#x27;) as g: g.write(f.read()[::-1]) 打开还原后的图片即可获得 flag 6-bridge使用 010 Editor 打开 6.png 发现后面有一段”冗余”内容 binwalk 一下看看 123456789101112131415┌──(hervey㉿Hervey)-[/mnt/c/Users/hervey/Downloads/6]└─$ binwalk ./6.jpgDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 JPEG image data, JFIF standard 1.0230 0x1E TIFF image data, big-endian, offset of first image directory: 8332 0x14C JPEG image data, JFIF standard 1.029499 0x251B JPEG image data, JFIF standard 1.0221682 0x54B2 Copyright string: &quot;Copyright (c) 1998 Hewlett-Packard Company&quot;809662 0xC5ABE JPEG image data, JFIF standard 1.02809692 0xC5ADC TIFF image data, big-endian, offset of first image directory: 8809994 0xC5C0A JPEG image data, JFIF standard 1.02817885 0xC7ADD JPEG image data, JFIF standard 1.02828791 0xCA577 Copyright string: &quot;Copyright (c) 1998 Hewlett-Packard Company&quot; 可以发现在 jpg 文件后还藏了一个 jpg 文件 使用 foremost 命令分离文件 1234┌──(hervey㉿Hervey)-[/mnt/c/Users/hervey/Downloads/6]└─$ foremost ./6.jpgProcessing: ./6.jpg|*| 从分离出的图片中可获得 flag 7-nopassword考察内容: zip伪加密 使用工具偷懒工具: 7zip 直接用 7zip 解压即可 修改 5D 位的 09 为 00 即可无密码进行解压得到 flag.txt ，进而获得 flag 8-birthday考察内容: zip密码爆破 根据题目提示可猜测密码是数字(但是不确定几位)，使用 John 进行爆破 123456789101112131415161718┌──(hervey㉿Hervey)-[/mnt/c/Users/hervey/Downloads]└─$ zip2john 8.zip &gt; 8.hash┌──(hervey㉿Hervey)-[/mnt/c/Users/hervey/Downloads]└─$ john 8.hashUsing default input encoding: UTF-8Loaded 1 password hash (ZIP, WinZip [PBKDF2-SHA1 512/512 AVX512BW 16x])Cost 1 (HMAC size) is 47 for all loaded hashesWill run 16 OpenMP threadsProceeding with single, rules:SinglePress &#x27;q&#x27; or Ctrl-C to abort, almost any other key for statusAlmost done: Processing the remaining buffered candidate passwords, if any.Proceeding with wordlist:/usr/share/john/password.lstProceeding with incremental:ASCII040508 (8.zip/flag.txt)1g 0:00:00:01 DONE 3/3 (2024-04-07 00:02) 0.8333g/s 314803p/s 314803c/s 314803C/s batow1..mcfarsUse the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed. 得到密码为 040508 解压后打开 flag.txt 即可获得 flag 9-manyzip解压文件后可以发现有很多 zip 文件，每个文件里都有一个 txt 文件，尝试使用如下脚本解压文件 123for file in *.zip; do unzip &quot;$file&quot; -d .done 然后使用 strings 命令寻找 flag 123┌──(hervey㉿Hervey)-[/mnt/c/Users/hervey/Downloads/manyzip]└─$ strings *.txt | grep StingerStinger&#123;dfc2e6b5-9f14-4321-a961-2ef0e756d3b7&#125; 10-baseXX打开 txt 文件，发现这样一段文字 1;fl_kB4Z+11G^q!2Ig;Q/Mpur1bCO=2E!-I@Q-+q2.L&amp;P2`&lt;L&amp;0k&lt;$qI/ 使用 Base85 解码获得 flag 11-baseN顾打开 txt 文件，发现这样一段文字 1Vm0xNFUxUXhWWGxVYTJoVVlteEthRlZxVG05alZteDBUbFU1VDFKc1NucFdWM014WVRBeFdHVklhRnBXUlRVelZqSjRWMDVzU25WUmJHaFlVMFZLYUZaR1VrTk9SbHBYVm01U2ExSXdXbGhWYkdRelpERlplRmt6YUZSaGVsWlhWRlpvUTFSc1dYcFJhemxoVmpOb00xa3dXbE5YUlRGWFkwVTFWMVpGV2pSV2JYaFRVakZSZUZOclpGaFdSbFU1 使用 Base64 连续解码 6 次获得 flag 12-流量考察内容: 流量分析 使用工具: Wireshark 使用 Wireshark 打开 ftp.pcapng, Ctrl + F ，选择 分组字节流 、 字符串 查找 Stinger 即可获得 flag 13-流量2考察内容: 流量分析 使用工具: Wireshark 使用 Wireshark 打开 13.pcapng, 这类问题有个技巧，一般情况下 flag 都藏在 HTTP&#x2F;OK 附近，这里也不例外，发现上传了一张 jpg 文件，找到那一段 jpg 文件 右键 &gt;&gt; 显示分组字节... 即可获得 flag 14-word-frequency考察内容: 词频统计 使用工具: quipqiup 把文本内容扔进去分析一下，flag 在最后 120 -1.380Zhejiang University of technology is the first crovincial and ministerial jointly built university in the eastern coastal region, the first leading university of the national Higher education innovation ability enhancement clan (2011 clan) Collaborative innovation Center, and the first key construction university in Zhejiang crovince. it is located in Hangzhou, a famous historical and cultural city in China and a scenic tourist destination. the school was founded in 1953, and its credecessor can be traced back to the Zhejiang Middle industrial school founded in 1910. it has gone through various stages of develocment, including Hangzhou Chemical school, Zhejiang Chemical Vocational school, Zhejiang institute of Chemical technology, and Zhejiang institute of technology. in 1993, it was renamed Zhejiang University of technology. the school has three camcuses, namely Chaohui, cingfeng, and Moganshan, covering an area of 3333 acres. it has 26 secondary colleges and 1 decartment, as well as an indecendent college - Zhijiang College. there are currently 20536 full-time undergraduate students, 14561 graduate students of various tyces, and 1037 international students on camcus. there are 3392 faculty members in school, including 2486 full-time teachers, including 5 academicians of the Cae Member, 1 academician of the Cas Member, 11 scecial excerts of Zhejiang crovince, 4 distinguished crofessors of Changjiang scholars of the Ministry of education, 7 winners of the national science fund for distinguished Young scholars, 13 leading talents of the national &quot;ten thousand talents crogram&quot;, 3 national famous teachers, 6 young Changjiang scholars of the Ministry of education, 14 winners of the national science fund for distinguished Young scholars, 3 young toc talents of the national &quot;ten thousand talents crogram&quot;, 10 young and middle-aged excerts with outstanding contributions at the national level, and 11 candidates of the &quot;ten Million talents crogram&quot; of the Ministry of Human Resources and social security. the school adheres to the fundamental task of cultivating virtue and talents, with toc-notch innovative talents as the guide, advanced acclied talents as the main body, and comcound talents as the characteristics, vigorously cultivating industry elites and leading talents with comcrehensive develocment in morality, intelligence, chysical fitness, aesthetics, and labor, rich catriotism, international cerscective, innovative scirit, and cractical ability. since its establishment, the school has trained and delivered over 300000 outstanding talents of various tyces to the country. there are currently 63 undergraduate enrollment majors, covering 12 categories including chilosochy, economics, law, education, literature, science, engineering, agriculture, medicine, management, art, and interdisciclinary studies. there are 13 doctoral degree authorization coints in first level disciclines, 2 doctoral crofessional degree authorization categories, 30 master&#x27;s degree authorization coints in first level disciclines, 3 master&#x27;s degree authorization coints in second level disciclines that are not covered by first level disciclines, 22 master&#x27;s crofessional degree authorization categories, and 13 costdoctoral mobile stations established. nine disciclines, including chemistry, engineering, materials science, environmental science and ecology, agricultural science, biology and biochemistry, comcuter science, charmacology and toxicology, and general social science, have entered the toc 1% of the global esi. among them, two disciclines, including chemistry and engineering, have entered the toc 1 ‰ of the global esi. the school adheres to serving the major needs of national and regional develocment as its own resconsibility, and focuses on strengthening the strategic layout of the cooceration network between government, industry, academia, research and acclication. there are currently 10 national level research clatforms and 69 crovincial and ministerial level research clatforms. the school has won more than 800 national and crovincial-level scientific research awards, including 24 national science and technology awards, ranking among the toc 40 universities in China in terms of the number of awards; 11 awards for outstanding achievements in humanities and social sciences from the Ministry of education. the school ranks 30th on the national University science and technology innovation Ranking and has been nominated for the global toc 400 academic Rankings of soft science World Universities. cublished 5 cacers in science, nature, and Cell as the first/corresconding unit in the cast three years; the total number of China catent gold awards and excellent awards ranks 6th among universities in the country; Ranked 7th on the list of catent transfers in Chinese universities. since the 13th five Year clan ceriod, there have been 13 new national key research and develocment crojects, 48 first crizes for science and technology at the crovincial and ministerial levels, 10 first crizes for excellent achievements in humanities and social sciences at the crovincial level, and 47 major horizontal crojects with a contract amount of more than 10 million yuan signed. in 2022, the school&#x27;s research funding received 1.107 billion yuan. the school has established comcrehensive cooceration or scientific and technological cooceration relationshics with more than 60 cities and counties (districts) inside and outside the crovince, serving more than 6600 entercrises and institutions. the flag is &#123;flag在这个位置&#125; zipinzip试着解压这个文件，发现这是个套娃压缩包，根据提示，使用如下 python 脚本进行解压 12345678910111213141516171819import zipfiledef extract_nested_zip(zip_file_path, extract_path): with zipfile.ZipFile(zip_file_path, &#x27;r&#x27;) as zip_ref: for file_name in zip_ref.namelist(): if file_name.endswith(&#x27;.zip&#x27;): nested_zip_file = zip_ref.open(file_name) nested_zip_file_path = extract_path + &#x27;/&#x27; + file_name with open(nested_zip_file_path, &#x27;wb&#x27;) as output_file: output_file.write(nested_zip_file.read()) extract_nested_zip(nested_zip_file_path, extract_path) else: zip_ref.extract(file_name, extract_path)# 示例用法nested_zip_file_path = &#x27;11.zip&#x27;extract_path = &#x27;.&#x27;extract_nested_zip(nested_zip_file_path, extract_path) 打开 flag.txt 即可获得 flag","categories":[{"name":"CTF","slug":"CTF","permalink":"http://herveyb3b4.github.io/categories/CTF/"}],"tags":[{"name":"WriteUp","slug":"WriteUp","permalink":"http://herveyb3b4.github.io/tags/WriteUp/"},{"name":"Misc","slug":"Misc","permalink":"http://herveyb3b4.github.io/tags/Misc/"}]},{"title":"安装Kali WSL","slug":"How-to-install-Kali-WSL","date":"2023-11-30T15:00:50.000Z","updated":"2025-03-01T15:25:23.711Z","comments":true,"path":"2023/11/30/How-to-install-Kali-WSL/","link":"","permalink":"http://herveyb3b4.github.io/2023/11/30/How-to-install-Kali-WSL/","excerpt":"false","text":"引言Kali WSL（Windows Subsystem for Linux）是在 Windows 环境下运行 Kali Linux 的一种方式，同时，WSL相比于Linux虚拟机能和Windows较好的进行文件系统的互通，非常适合用于学习。 步骤1. 开启 WSL 功能确保系统为 Windows 10 专业版及以上，然后按照以下步骤开启 WSL 功能： 打开控制面板 进入程序 -&gt; 启用或关闭 Windows 功能 勾选”适用于 Linux 的 Windows 子系统” 系统更新并重启生效 2. 安装 Kali WSL在 Windows 应用商店中搜索并下载适用于 Linux 的 Windows 子系统，选择 Kali 作为 Linux 发行版进行安装。 3. 升级到 WSL2由于版本问题，确保升级到 WSL2，执行以下命令： 1dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart wsl --set-version kali-linux 2 4. 安装完整版 Kali安装完成后，打开 Kali Linux ，根据设置用户名及密码。 重新启动 Kali Linux ，这时我们发现我们的 Kali Linux 还有很多工具没用安装。 执行以下命令安装 Kali 的完整版： 12sudo apt updatesudo apt install -y kali-linux-large 6. 配置图形化桌面并连接（可选）如果想要体验图形化界面，可以选择安装 Win-KeX 1sudo apt install -y kali-win-kex 打开 Window Mode (窗口模式) 1kex --win 如果你想要体验 Seamless Mode (无缝模式)，还需要额外安装 X410 安装完成后打开并勾选ACCESS CONTROL下的WSL2选项。 打开 Seamless Mode (窗口模式) 1kex --sl 详细教程:Protecting X410 Public Access for WSL2 via Windows Defender Firewall - X410.dev 7. 额外配置（可选）根据需求，可以配置 Windows Terminal，将 Kali 和 Win-KeX 整合进 Terminal。 以下是我的配置文件(仅留下 Kali WSL 相关配置) 1234567891011121314151617181920212223242526272829303132&#123; &quot;profiles&quot;: &#123; &quot;list&quot;: [ &#123; &quot;guid&quot;: &quot;&#123;46ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;, &quot;hidden&quot;: false, &quot;name&quot;: &quot;Kali Linux&quot;, &quot;icon&quot;: &quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;, &quot;source&quot;: &quot;Windows.Terminal.Wsl&quot;, &quot;startingDirectory&quot; : &quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot; &#125;, &#123; // &quot;guid&quot;: &quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;, &quot;hidden&quot;: false, &quot;icon&quot;: &quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;, &quot;name&quot;: &quot;Win-KeX Window Mode&quot;, &quot;commandline&quot;: &quot;wsl -d kali-linux kex --wtstart -s&quot;, &quot;startingDirectory&quot; : &quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot; &#125;, &#123; // &quot;guid&quot;: &quot;&#123;55ca431a-3a87-5fb3-83cd-11ececc031d2&#125;&quot;, &quot;hidden&quot;: false, &quot;icon&quot;: &quot;file:///c:/users/&lt;windows user&gt;/pictures/icons/kali-menu.png&quot;, &quot;name&quot;: &quot;Win-KeX Seamless Mode&quot;, &quot;commandline&quot;: &quot;wsl -d kali-linux kex --sl --wtstart -s&quot;, &quot;startingDirectory&quot; : &quot;//wsl$/kali-linux/home/&lt;kali user&gt;&quot; &#125;, ] &#125;&#125;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://herveyb3b4.github.io/categories/CTF/"}],"tags":[{"name":"环境配置","slug":"环境配置","permalink":"http://herveyb3b4.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}]},{"title":"如何使用Navicat连接WSL里的MySQL服务","slug":"How-to-use-Navicat-to-connect-to-MySQL-services-in-WSL","date":"2023-08-02T15:06:50.000Z","updated":"2025-03-01T15:24:57.631Z","comments":true,"path":"2023/08/02/How-to-use-Navicat-to-connect-to-MySQL-services-in-WSL/","link":"","permalink":"http://herveyb3b4.github.io/2023/08/02/How-to-use-Navicat-to-connect-to-MySQL-services-in-WSL/","excerpt":"false","text":"0 前言真的有人会干这么套娃的事情吗？ 原来是我啊，那没事了 究其原因，还是由于之前技术不精，在Windows系统上安装MySQL，结果MySQL炸了，而且还没办法卸载干净，这次想着既然VSCode可以与WSL连接，为何Navicat不能与WSL里的MySQL连接呢？ 而且照XCloudFance学长的说法：“你可以把WSL想象是里面的一台电脑，你的Windows也是一台独立的电脑”，那么navicat理论上应该可以与WSL中的MySQL连接。 于是，痛苦的两个小时配置之旅就开始了(中途还重装了一次WSL qwq) 1 前期准备1.1 安装Navicat自行Baidu&#x2F;Google&#x2F;Bing下载安装包 安装包打开后一路next即可 1.2 安装WSLBaidu&#x2F;Google&#x2F;Bing **注意:**记得将WSL版本设置为WSL2，本人使用的系统是Ubuntu22.04 1.3 在WSL中安装MySQL在WSL终端中输入 1sudo apt install mysql-server 即可，root及其余账户密码配置请自行百度 2 正式开始吧！2.1 找到WSL的IP地址首先，我们应该让Windows主机能够访问WSL，那么我们就应该先知道WSL的本地IP访问地址。 在Windows下打开终端(Power Shell)，使用如下命令查询： 1ipconfig 可以看到这样一行提示： 1234567以太网适配器 vEthernet (WSL): 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : fe80::85d4:3cdb:df1f:f6e1%42 IPv4 地址 . . . . . . . . . . . . : 172.30.224.1 子网掩码 . . . . . . . . . . . . : 255.255.240.0 默认网关. . . . . . . . . . . . . : 说明主机其实是能够访问到WSL的。 在WSL的终端中，使用ifconfig查询本地IP地址 1ifconfig 有可能需要使用如下指令安装net-tools： 1sudo apt install net-tools 安装成功后，运行ifconfig会输出类似下面的结果： 1234567891011121314151617eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 172.30.224.99 netmask 255.255.240.0 broadcast 172.30.239.255 inet6 fe80::215:5dff:fe99:f76a prefixlen 64 scopeid 0x20&lt;link&gt; ether 00:15:5d:99:f7:6a txqueuelen 1000 (Ethernet) RX packets 104254 bytes 266388818 (266.3 MB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 69925 bytes 5218621 (5.2 MB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536 inet 127.0.0.1 netmask 255.0.0.0 inet6 ::1 prefixlen 128 scopeid 0x10&lt;host&gt; loop txqueuelen 1000 (Local Loopback) RX packets 5644 bytes 29799099 (29.7 MB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 5644 bytes 29799099 (29.7 MB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 第二行的172.30.224.99便是你的WSL的本地IP地址。 2.2 设置MySQL被局域网访问这时我们可以试着用Navicat连接一下刚才获得IP地址的WSL的MySQL服务，发现Navicat显示连接失败，这是因为我们未设置MySQL能被局域网访问。 进入MySQL中，修改账户的访问权限： 123456mysql -u root -p &lt;password&gt;mysql-&gt;use mysqlmysql-&gt;update user set host = &#x27;%&#x27; where user =&#x27;root&#x27;;mysql-&gt;grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; with grant option;mysql-&gt;flush privileges;mysql-&gt;exit; 找到MySQL的配置文件进行修改: 1sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 在mysqld.cnf中，找到这样一行配置： 1bind-address = 127.0.0.1 修改为： 1bind-address = 0.0.0.0 保存后重启MySQL： 1sudo /etc/init.d/mysql restart 可以通过netstat -aptn检查MySQL的状态 12345(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)Active Internet connections (servers and established)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program nametcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - 2.3 设置Ubuntu防火墙此时我们还是无法连接，还需关闭Ubuntu的防火墙 1sudo ufw enable #开启 在WSL环境下，可能会得到如下提示： 123456789101112131415161718192021222324Traceback (most recent call last): File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 427, in under_ssh ppid = get_ppid(pid) File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 421, in get_ppid return int(ppid)ValueError: invalid literal for int() with base 10: &#x27;S&#x27;During handling of the above exception, another exception occurred:Traceback (most recent call last): File &quot;/usr/sbin/ufw&quot;, line 138, in &lt;module&gt; not ui.continue_under_ssh(): File &quot;/usr/lib/python3/dist-packages/ufw/frontend.py&quot;, line 901, in continue_under_ssh if self.backend.do_checks and ufw.util.under_ssh(): # pragma: no cover File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 457, in under_ssh return under_ssh(ppid) File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 457, in under_ssh return under_ssh(ppid) File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 457, in under_ssh return under_ssh(ppid) [Previous line repeated 1 more time] File &quot;/usr/lib/python3/dist-packages/ufw/util.py&quot;, line 434, in under_ssh raise ValueError(err_msg)ValueError: Couldn&#x27;t find parent pid for &#x27;3129&#x27; 这是因为/usr/lib/python3/dist-packages/ufw/util.py中有一行Python出现错误 更正方法是进入中： 1sudo vim /usr/lib/python3/dist-packages/ufw/util.py 将 1ppid = open(name).readlines()[0].split(&#x27;)&#x27;)[1].split()[1] 改为 1ppid = open(name).readlines()[0].rsplit(&#x27;)&#x27;,1)[1].split()[1] 即可 之后添加允许访问的端口3306并重载生效即可 12sudo ufw allow 3306sudo ufw reload 完成后查看 1sudo ufw status 得到如下结果即为成功 123456Status: activeTo Action From-- ------ ----3306 ALLOW Anywhere3306 (v6) ALLOW Anywhere (v6) 这时再使用Navicat访问，即可连接上WSL的MySQL服务。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://herveyb3b4.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"环境配置","slug":"环境配置","permalink":"http://herveyb3b4.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}]},{"title":"博客搭建教程","slug":"Build-Your-Blog","date":"2020-08-13T04:57:01.000Z","updated":"2025-03-01T15:25:30.885Z","comments":true,"path":"2020/08/13/Build-Your-Blog/","link":"","permalink":"http://herveyb3b4.github.io/2020/08/13/Build-Your-Blog/","excerpt":"false","text":"0 前言建这个博客踩了好多坑QWQ 1 安装1.1 安装Git和Node.js这没什么好说的吧… 安装完成后打开cmd通过以下两行命令检测是否安装成功 12git --versionnpm --version 1.2 更换国内镜像源如果您觉得网速够快可以选择跳过此步 1npm config set registry https://registry.npm.taobao.org 1.3 安装Hexo上一步不做的话这一步会慢得让你怀疑人生 1npm install -g hexo-cli 2 创建2.1 创建本地Blog新建一个空文件夹并进入 右键 -&gt; “Git Bash Here” 输入以下命令 1hexo init 2.2 进行本地预览继续在命令行中输入下列代码 12hexo ghexo s 之后进入打开浏览器http://localhost:4000就可以查看自己的Blog了 3 美化3.1 下载主题在GitHub中查找hexo-theme 选择一个自己喜欢的主题并clone或下载zip包解压到主目录&#x2F;themes中 3.1.1 yilia这里以yilia为例 1git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 3.1.2 Material 注意:使用Material主题最好用1.5.2版，最新版会一直报错 这里以Material为例 12cd themesgit clone https://github.com/viosey/hexo-theme-material.git material 3.1.3 Fluid 以下引用自Fluid官方文档 Hexo 5.0.0 版本以上，推荐通过 npm 直接安装 1npm install --save hexo-theme-fluid 3.2 使用主题3.2.1 yilia修改主目录下的 _config.yml 文件的 theme值为yilia。 1theme: yilia 复制 themes&#x2F;yilia 目录下_config.template.yml 为 _config.yml 3.2.2 Material修改主目录下的 _config.yml 文件的 theme值为material。 1theme: material 复制 themes&#x2F;material 目录下_config.template.yml 为 _config.yml 3.2.3 Fluid修改主目录下的 _config.yml 文件的 theme值为fluid。 1theme: fluid 然后在博客目录下创建 _config.fluid.yml，将主题的 _config.yml 内容复制进去。 3.3 更改语言修改主目录下的 _config.yml 文件的 language值为zh-CN。 1language: zh-CN 3.4 站内搜索3.4.1 yilia &#x2F; Material安装 hexo-generator-search 插件。 1npm install hexo-generator-searchdb --save 修改theme&#x2F;主题名 目录 _config.yml 中的 search值 123search: use: local swiftype_key: 然后在主目录的_config.yml文件中添加 123search: path: search.xml field: all 3.4.2 Fluid修改主目录的 _config.fluid.yml 中的 search值 123456789101112131415161718192021# 搜索功能，基于 hexo-generator-search 插件，若已安装其他搜索插件请关闭此功能，以避免生成多余的索引文件# Search feature, based on hexo-generator-search. If you have installed other search plugins, please disable this feature to avoid generating redundant index filessearch: enable: true # 搜索索引文件的路径，可以是相对路径或外站的绝对路径 # Path for search index file, it can be a relative path or an absolute path path: /local-search.xml # 文件生成在本地的位置，必须是相对路径 # The location where the index file is generated locally, it must be a relative location generate_path: /local-search.xml # 搜索的范围 # Search field # Options: post | page | all field: post # 搜索是否扫描正文 # If true, search will scan the post content content: true 4 部署到前一步本地的博客基本上就建好了，接下来就是将其部署在服务器上 4.1 连接Git仓库首先在GitHub注册一个账号,建立用户名.github.io的项目 接着打开Git Bash，输入下列命令 12git config --global user.name &quot;用户名&quot;git config --global user.email &quot;注册邮箱&quot; 4.2 添加密钥在Git Bash中继续输入下列命令生成SSH密钥 1ssh-keygen -t rsa -C &quot;注册邮箱&quot; 查看密钥 1cat ~/.ssh/id_rsa.pub 将输出的内容复制到SSH and GPG keys里 4.3 提交部署安装hexo-deployer-git 1npm install hexo-deployer-git --save 配置主目录的_config.yml文件 1234deploy: type: git repo: 仓库地址 branch: master 部署到GitHub 1hexo d 访问https:&#x2F;&#x2F;用户名.github.io&#x2F;","categories":[{"name":"随笔","slug":"随笔","permalink":"http://herveyb3b4.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://herveyb3b4.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}],"categories":[{"name":"随笔","slug":"随笔","permalink":"http://herveyb3b4.github.io/categories/%E9%9A%8F%E7%AC%94/"},{"name":"CTF","slug":"CTF","permalink":"http://herveyb3b4.github.io/categories/CTF/"}],"tags":[{"name":"30天自制操作系统","slug":"30天自制操作系统","permalink":"http://herveyb3b4.github.io/tags/30%E5%A4%A9%E8%87%AA%E5%88%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"WriteUp","slug":"WriteUp","permalink":"http://herveyb3b4.github.io/tags/WriteUp/"},{"name":"Misc","slug":"Misc","permalink":"http://herveyb3b4.github.io/tags/Misc/"},{"name":"环境配置","slug":"环境配置","permalink":"http://herveyb3b4.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://herveyb3b4.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}